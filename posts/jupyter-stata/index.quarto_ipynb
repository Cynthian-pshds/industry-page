{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: 对文科生友好的 Jupyter－Stata 配置方法\n",
        "subtitle: VS Code 和 JupyterLab Desktop 两种方案\n",
        "description: 对 Windows 用户适用，信息截至 2024 年\n",
        "author: 刘景山\n",
        "date: \"2024-4-28\"\n",
        "categories: [操作经验,Jupyter,Stata]\n",
        "number-sections: true\n",
        "toc-title: \"章节目录\"\n",
        "toc-depth: 4\n",
        "---\n",
        "\n",
        "\n",
        "如果你已经安装了主流 Python 环境管理器（例如 Anaconda / Miniconda / Mambaforge / Miniforge / Micromamba），请跳过 @sec-python ，直接从 @sec-jupyter 开始。\n",
        "\n",
        "如果你已经安装了 Jupyter 软件包，请跳过 @sec-jupyter ，直接从 @sec-kernel 开始。\n",
        "\n",
        "以下章节可能多次涉及到类似这样的「跳过」，不再说明，请视自身情况灵活跳跃。\n",
        "\n",
        "再次强调，本经验对 **Windows** 用户适用。其他操作系统的用户请参考附录列出的网址。\n",
        "<br><br>\n",
        "\n",
        "## 配 Jupyter 环境\n",
        "\n",
        "### 配 Python 环境 {#sec-python}\n",
        "\n",
        "Anaconda 是商业软件，虽然还没有对个人收费，但已经宣布对企业收费。  \n",
        "Miniconda 也是 Anaconda 的产品，虽然现在不对任何人收费，但以后的事没人知道。  \n",
        "虽然 Anaconda 对新手友好，但为了规避将来的法律风险——同时也为了你可怜的 C 盘剩余空间考虑——我还是强烈建议你选择 Miniforge。\n",
        "\n",
        "#### EXE 下载安装\n",
        "\n",
        "以下两个地址都可以下载到最新正式版 exe 格式文件，下载后点开安装就可以。[原文](https://github.com/conda-forge/miniforge/#windows){target=\"_blank\"}  \n",
        "[conda-forge 官网下载地址](https://conda-forge.org/miniforge/){target=\"_blank\"}  \n",
        "[GitHub 仓库下载地址](https://github.com/conda-forge/miniforge/releases){target=\"_blank\"}\n",
        "\n",
        "#### Windows 环境变量\n",
        "\n",
        "也许你刚才在安装 exe 时出于安全考虑而没有勾选自动添加环境变量。\n",
        "\n",
        "#### 配虚拟环境\n",
        "\n",
        "```markdown\n",
        "```{bash}\n",
        "mamba create -n myenv python=3.9\n",
        "\n",
        "### 安装 Jupyter 软件包 {#sec-jupyter}\n",
        "\n",
        "## 配 Jupyter 内核 {#sec-kernel}\n",
        "\n",
        "## JupyterLab 方案 {#sec-jupyterlab}\n",
        "\n",
        "虽然在 VS Code 丰富的社区扩展生态和灵活的语法高亮前，原生 Jupyter 已经没有多少吸引力（而且 Jupyter 受财力限制，目前没有，未来也不太可能学微软砸钱给 GitHub Copilot 教育优惠的免费 LLM 辅助），但考虑到读者朋友多来自社科专业，大概率是 Jupyter 原住民，而且 VS Code 由于可自定义的设置太多，常常难以复现，还是介绍一下原生 Jupyter 的配置。\n",
        "\n",
        "虽然 JupyterLab Desktop 因为基于 Electron 开发而受到广大程序员朋友嘲笑，但我仍然推荐。它安装扩展、浏览已装扩展、检查扩展运行是否正常都是直接在应用内部点鼠标就可以的，不需要键盘敲命令行。它不在浏览器里显示，可以轻松区分 Ctrl + Tab 和 Alt + Tab 的作用，与浏览器实现分类正确的两种切换。\n",
        "\n",
        "## VS Code 方案\n"
      ],
      "id": "80fe558c"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}