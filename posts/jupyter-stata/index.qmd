---
title: 对文科生友好的 Jupyter + Stata 配置方法
subtitle: VS Code 和 JupyterLab Desktop 两种方案
description: 对 Windows 10 用户适用，信息截至 2024 年
author: 刘景山
date: "2024-4-28"
categories: [操作经验,Jupyter,Stata]
number-sections: true
toc-title: "章节目录"
toc-depth: 4
---

## 前言

::: {.callout-tip title="跳跃提示"}
如果你已经安装了主流 Python 环境管理器（例如 Anaconda / Miniconda / Mambaforge / Miniforge / Micromamba），请跳过 @sec-python ，直接从 @sec-jupyter 开始。  
如果你已经安装了 Jupyter 软件包，请跳过 @sec-jupyter ，直接从 @sec-kernel 开始。  
以下章节可能多次涉及到类似这样的「跳过」，不再说明，请视自身情况灵活跳跃。
:::

::: {.callout-important title="请检查自身操作系统"}
再次强调，本经验对 **Windows 10** 用户适用。Windows 其他版本的用户可**遵照**操作，遇见问题再另外解决。其他操作系统的用户可**参照**操作，并参考 @sec-appendix 列出的网址。
:::

&emsp;

## 配 Jupyter 环境

### 配 Python 环境 {#sec-python}

Anaconda 是商业软件，虽然还没有对个人收费，但已经宣布对企业收费。  
Miniconda 也是 Anaconda 的产品，虽然现在不对任何人收费，但以后的事没人知道。  
虽然 Anaconda 对新手友好，但为了规避将来的法律风险——同时也为了你可怜的 C 盘剩余空间考虑——我还是强烈建议你选择 Miniforge。

#### EXE 下载安装

以下两个地址都可以下载到最新正式版 exe 格式文件，下载后点开安装就可以。[原文](https://github.com/conda-forge/miniforge/#windows){target="_blank"}  
[conda-forge 官网下载地址](https://conda-forge.org/miniforge/){target="_blank"}  
[GitHub 仓库下载地址](https://github.com/conda-forge/miniforge/releases){target="_blank"}

::: {.callout-warning collapse="false" title="全英文路径和 Windows Username 有关"}
如果你的 Windows 用户名含有英文 26 个拉丁字母以外的字符，这会导致安装路径不是纯英文的，从而安装失败。这在可预见的将来都没有解决方法，你只能换个 Windows 用户名了。  
详见 [此 Issue](https://github.com/conda-forge/miniforge/issues/484)
:::

#### 环境变量

也许你刚才在安装 exe 时出于安全考虑而没有勾选自动添加环境变量。Miniforge Prompt 本身并不需要设定环境变量；如果你希望使用 cmd 或者 Powershell 之类，那么按以下操作：

1. 打开 Windows 高级系统设置
2. 点击「高级」选项卡
3. 点开「环境变量」
4. 单击「系统变量」当中的「Path」$\Rightarrow$ 单击「编辑」进入「编辑环境变量」窗口
5. 单击「新建」来创建路径，通常安装 miniforge 的文件夹默认在 C 盘，是「C:\\miniforge3」，那么你要新建的的三个路径就是
```
C:\miniforge3  
C:\miniforge3\Scripts  
C:\miniforge3\Library\bin
```

#### 配虚拟环境

打开 Miniforge Prompt，输入以下代码按 Enter，就创建了你需要的环境。xxx 是你给它起的名字，yyy 是它的版本号。-n 是 -name 的缩写，代表用后面跟着的单词命名。

```powershell
mamba create -n xxx python=yyy
```

例如，假设我要创建一个名为 jupyter_stata 的环境，python 版本号为 3.11.9

```powershell
mamba create -n jupyter_stata python=3.11.9
```

接着激活这个环境

```powershell
mamba activate jupyter_stata
```

如果无效，可考虑用 conda 操作

```powershell
conda activate jupyter_stata
```

如果要退出环境，由于此时是第一次激活环境，以下两句命令有可能出现某一种失效，如果无效则可以考虑两种都试试。第二次激活及以后就不再会失效。

```powershell
mamba deactivate
```

```powershell
mamba deactivate jupyter_stata
```

### 安装 Jupyter 软件包 {#sec-jupyter}

激活环境后，安装 jupyter

## 配 Jupyter 内核 {#sec-kernel}

## JupyterLab 方案 {#sec-jupyterlab}

虽然在 VS Code 丰富的社区扩展生态和灵活的语法高亮前，原生 Jupyter 已经没有多少吸引力（而且 Jupyter 受财力限制，目前没有，未来也不太可能学微软砸钱给 GitHub Copilot 教育优惠的免费 LLM 辅助），但考虑到读者朋友多来自社科专业，大概率是 Jupyter 原住民，而且 VS Code 由于可自定义的设置太多，常常难以复现，还是介绍一下原生 Jupyter 的配置。

虽然 JupyterLab Desktop 因为基于 Electron 开发而受到广大程序员朋友嘲笑，但我仍然推荐。它安装扩展、浏览已装扩展、检查扩展运行是否正常都是直接在应用内部点鼠标就可以的，不需要键盘敲命令行。它不在浏览器里显示，可以轻松区分 Ctrl + Tab 和 Alt + Tab 的作用，与浏览器实现分类正确的两种切换。

## VS Code 方案

## 附录 {#sec-appendix}

